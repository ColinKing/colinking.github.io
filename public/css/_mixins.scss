
@import "functions";

// generic transform
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

// rotate
@mixin rotate($deg) {
	@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
}

// translate
@mixin translate($x, $y) {
	@include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin($origin) {
	-moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

@mixin transition($transitions) {
	-webkit-transition: $transitions;
	-moz-transition: $transitions;
	-o-transition: $transitions;
	transition: $transitions;
}

@mixin image-wrapper-transform($image-offset, $image-width) {
  @include transform(translate(-$image-width, -#{image-height()}) /*translate(-$project-border-width, -$project-border-width) */rotate(#{$theta}deg) translate($image-offset, 0));
}

// @mixin image-transform($image-offset) {
//   @include transform(translate(0, -$image-offset) rotate(#{$theta}deg) translate(-$image-offset / 4, 110.4%));
// }

@mixin image-transform-2($image-offset, $x, $y) {
  @include transform(
	translate(-$image-offset, 0)
	rotate(-#{$theta}deg)
	rotate(0)
	translate(
		$x, $y
	)
	// translate(
	//     $project-height/2 - ($image-width * cos($theta + 0deg)
	//         + $project-height * sin($theta + 0deg)) / 2
	//       ,
	//         -$image-width/2 + ($image-width * sin($theta + 0deg) - 
	//           $project-height * cos($theta + 0deg)) / 2
	// )
  );
}

@mixin set-project-widths($project-width, $image-width) {
	$project-content-width: $project-width - $image-width; //100% - $project-width + 30%;
	.project {
		width: $project-width;
		.project-content {
			width: $project-content-width;
		}
		.project-image {
			width: $image-width;
			.image-wrapper {
				width: 2 * $image-width;
				.image {
					width: $image-width;
				}
			}
		}
	}
}

@mixin project-transforms($image-offset-opened, $image-offset-closed, $x, $y, $image-width) {
  .project {
	.image-wrapper {
		@include transition($project-transition);
		@include image-wrapper-transform($image-offset-closed, $image-width);
		.image {
		@include transition($project-transition);
		@include image-transform-2($image-offset-closed, $x, $y);
	  }
	}
  }
  .project-outer:hover {
	.image-wrapper {
		@include image-wrapper-transform($image-offset-opened, $image-width);
		.image {
			@include image-transform-2($image-offset-opened, $x, $y);
		}
	}
  }
}
